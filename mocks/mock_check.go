// Code generated by MockGen. DO NOT EDIT.
// Source: actions/check.go

// Package mocks is a generated GoMock package.
package mocks

import (
	utils "github.com/adgear/helm-chart-resource/utils"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCheckResource is a mock of CheckResource interface
type MockCheckResource struct {
	ctrl     *gomock.Controller
	recorder *MockCheckResourceMockRecorder
}

// MockCheckResourceMockRecorder is the mock recorder for MockCheckResource
type MockCheckResourceMockRecorder struct {
	mock *MockCheckResource
}

// NewMockCheckResource creates a new mock instance
func NewMockCheckResource(ctrl *gomock.Controller) *MockCheckResource {
	mock := &MockCheckResource{ctrl: ctrl}
	mock.recorder = &MockCheckResourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCheckResource) EXPECT() *MockCheckResourceMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockCheckResource) Execute(source utils.Source) (string, error) {
	ret := m.ctrl.Call(m, "Execute", source)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Execute indicates an expected call of Execute
func (mr *MockCheckResourceMockRecorder) Execute(source interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockCheckResource)(nil).Execute), source)
}
