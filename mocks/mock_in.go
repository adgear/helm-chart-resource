// Code generated by MockGen. DO NOT EDIT.
// Source: actions/in.go

// Package mocks is a generated GoMock package.
package mocks

import (
	utils "github.com/adgear/helm-chart-resource/utils"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInResource is a mock of InResource interface
type MockInResource struct {
	ctrl     *gomock.Controller
	recorder *MockInResourceMockRecorder
}

// MockInResourceMockRecorder is the mock recorder for MockInResource
type MockInResourceMockRecorder struct {
	mock *MockInResource
}

// NewMockInResource creates a new mock instance
func NewMockInResource(ctrl *gomock.Controller) *MockInResource {
	mock := &MockInResource{ctrl: ctrl}
	mock.recorder = &MockInResourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInResource) EXPECT() *MockInResourceMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockInResource) Execute(source utils.Source, destination, version string) (string, error) {
	ret := m.ctrl.Call(m, "Execute", source, destination, version)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Execute indicates an expected call of Execute
func (mr *MockInResourceMockRecorder) Execute(source, destination, version interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockInResource)(nil).Execute), source, destination, version)
}
