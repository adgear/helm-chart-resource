// Code generated by MockGen. DO NOT EDIT.
// Source: artifactory/artifactory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	utils "github.com/adgear/helm-chart-resource/utils"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockArtifactory is a mock of Artifactory interface
type MockArtifactory struct {
	ctrl     *gomock.Controller
	recorder *MockArtifactoryMockRecorder
}

// MockArtifactoryMockRecorder is the mock recorder for MockArtifactory
type MockArtifactoryMockRecorder struct {
	mock *MockArtifactory
}

// NewMockArtifactory creates a new mock instance
func NewMockArtifactory(ctrl *gomock.Controller) *MockArtifactory {
	mock := &MockArtifactory{ctrl: ctrl}
	mock.recorder = &MockArtifactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockArtifactory) EXPECT() *MockArtifactoryMockRecorder {
	return m.recorder
}

// UploadArtifactoryChart mocks base method
func (m *MockArtifactory) UploadArtifactoryChart(source utils.Source, params utils.Params, version, tmpdir string) error {
	ret := m.ctrl.Call(m, "UploadArtifactoryChart", source, params, version, tmpdir)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadArtifactoryChart indicates an expected call of UploadArtifactoryChart
func (mr *MockArtifactoryMockRecorder) UploadArtifactoryChart(source, params, version, tmpdir interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadArtifactoryChart", reflect.TypeOf((*MockArtifactory)(nil).UploadArtifactoryChart), source, params, version, tmpdir)
}
